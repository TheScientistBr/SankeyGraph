library(plotly)
library(plotly)
packageVersion('plotly')
packageVersion(plotly)
packageVersion("plotly")
library(plotly)
install.packages("plotly")
library(plotly)
packageVersion("plotly")
source('E:/Sankey/splot.R')
p <- plot_ly(
type = "sankey",
orientation = "h",
node = list(
label = c("A1", "A2", "B1", "B2", "C1", "C2"),
color = c("blue", "blue", "blue", "blue", "blue", "blue"),
pad = 15,
thickness = 20,
line = list(
color = "black",
width = 0.5
)
),
link = list(
source = c(0,1,0,2,3,3),
target = c(2,3,3,4,4,5),
value =  c(8,4,2,8,4,2)
)
) %>%
layout(
title = "Basic Sankey Diagram",
font = list(
size = 10
)
)
chart_link = api_create(p, filename="sankey-basic-example")
p <- plot_ly(
type = "sankey",
domain = c(
x =  c(0,1),
y =  c(0,1)
),
orientation = "h",
valueformat = ".0f",
valuesuffix = "TWh"
) %>%
layout(
title = "Energy forecast for 2050, UK - Department of Energy & Climate Change",
font = list(
size = 10
),
xaxis = list(showgrid = F, zeroline = F),
yaxis = list(showgrid = F, zeroline = F)
)
library(plotly)
library(rjson)
json_file <- "https://raw.githubusercontent.com/plotly/plotly.js/master/test/image/mocks/sankey_energy.json"
json_data <- fromJSON(paste(readLines(json_file), collapse=""))
p <- plot_ly(
type = "sankey",
domain = c(
x =  c(0,1),
y =  c(0,1)
),
orientation = "h",
valueformat = ".0f",
valuesuffix = "TWh",
node = list(
label = json_data$data[[1]]$node$label,
color = json_data$data[[1]]$node$color,
pad = 15,
thickness = 15,
line = list(
color = "black",
width = 0.5
)
),
link = list(
source = json_data$data[[1]]$link$source,
target = json_data$data[[1]]$link$target,
value =  json_data$data[[1]]$link$value,
label =  json_data$data[[1]]$link$label
)
) %>%
layout(
title = "Energy forecast for 2050<br>Source: Department of Energy & Climate Change, Tom Counsell via <a href='https://bost.ocks.org/mike/sankey/'>Mike Bostock</a>",
font = list(
size = 10
),
xaxis = list(showgrid = F, zeroline = F),
yaxis = list(showgrid = F, zeroline = F)
)
chart_link = api_create(p, filename="sankey-basic")
json_file <- "https://raw.githubusercontent.com/plotly/plotly.js/master/test/image/mocks/sankey_energy.json"
json_data <- fromJSON(paste(readLines(json_file), collapse=""))
p <- plot_ly(
type = "sankey",
domain = c(
x =  c(0,1),
y =  c(0,1)
),
orientation = "h",
valueformat = ".0f",
valuesuffix = "TWh",
node = list(
label = json_data$data[[1]]$node$label,
color = json_data$data[[1]]$node$color,
pad = 15,
thickness = 15,
line = list(
color = "black",
width = 0.5
)
),
link = list(
source = json_data$data[[1]]$link$source,
target = json_data$data[[1]]$link$target,
value =  json_data$data[[1]]$link$value,
label =  json_data$data[[1]]$link$label
)
) %>%
layout(
title = "Energy forecast for 2050<br>Source: Department of Energy & Climate Change, Tom Counsell via <a href='https://bost.ocks.org/mike/sankey/'>Mike Bostock</a>",
font = list(
size = 10
),
xaxis = list(showgrid = F, zeroline = F),
yaxis = list(showgrid = F, zeroline = F)
)
chart_link = api_create(p, filename="sankey-basic")
chart_link
print(p)
library(networkD3)
install.packages("networkD3")
library(networkD3)
nodes = data.frame("name" =
c("Node A", # Node 0
"Node B", # Node 1
"Node C", # Node 2
"Node D"))# Node 3
links = as.data.frame(matrix(c(
0, 1, 10, # Each row represents a link. The first number
0, 2, 20, # represents the node being conntected from.
1, 3, 30, # the second number represents the node connected to.
2, 3, 40),# The third number is the value of the node
byrow = TRUE, ncol = 3))
names(links) = c("source", "target", "value")
sankeyNetwork(Links = links, Nodes = nodes,
Source = "source", Target = "target",
Value = "value", NodeID = "name",
fontSize= 12, nodeWidth = 30)
p <- plot_ly(
type = "sankey",
domain = c(
x =  c(0,1),
y =  c(0,1)
),
orientation = "h",
valueformat = ".0f",
valuesuffix = "TWh"
) %>%
layout(
title = "Energy forecast for 2050, UK - Department of Energy & Climate Change",
font = list(
size = 10
),
xaxis = list(showgrid = F, zeroline = F),
yaxis = list(showgrid = F, zeroline = F)
)
library(rjson)
json_file <- "https://raw.githubusercontent.com/plotly/plotly.js/master/test/image/mocks/sankey_energy.json"
json_data <- fromJSON(paste(readLines(json_file), collapse=""))
p <- plot_ly(
type = "sankey",
domain = c(
x =  c(0,1),
y =  c(0,1)
),
orientation = "h",
valueformat = ".0f",
valuesuffix = "TWh",
node = list(
label = json_data$data[[1]]$node$label,
color = json_data$data[[1]]$node$color,
pad = 15,
thickness = 15,
line = list(
color = "black",
width = 0.5
)
)
) %>%
layout(
title = "Energy forecast for 2050, UK - Department of Energy & Climate Change",
font = list(
size = 10
),
xaxis = list(showgrid = F, zeroline = F),
yaxis = list(showgrid = F, zeroline = F)
)
p <- plot_ly(
type = "sankey",
domain = c(
x =  c(0,1),
y =  c(0,1)
),
orientation = "h",
valueformat = ".0f",
valuesuffix = "TWh",
node = list(
label = json_data$data[[1]]$node$label,
color = json_data$data[[1]]$node$color,
pad = 15,
thickness = 15,
line = list(
color = "black",
width = 0.5
)
),
link = list(
source = json_data$data[[1]]$link$source,
target = json_data$data[[1]]$link$target,
value =  json_data$data[[1]]$link$value,
color =  json_data$data[[1]]$link$color,
label =  json_data$data[[1]]$link$label
)
) %>%
layout(
title = "Energy forecast for 2050, UK - Department of Energy & Climate Changes",
font = list(
size = 10
),
xaxis = list(showgrid = F, zeroline = F),
yaxis = list(showgrid = F, zeroline = F)
)
p
p
p <- plot_ly(
type = "sankey",
domain = c(
x =  c(0,1),
y =  c(0,1)
),
orientation = "h",
valueformat = ".0f",
valuesuffix = "TWh",
node = list(
label = json_data$data[[1]]$node$label,
color = json_data$data[[1]]$node$color,
pad = 15,
thickness = 15,
line = list(
color = "black",
width = 0.5
)
),
link = list(
source = json_data$data[[1]]$link$source,
target = json_data$data[[1]]$link$target,
value =  json_data$data[[1]]$link$value,
color =  json_data$data[[1]]$link$color,
label =  json_data$data[[1]]$link$label
)
) %>%
layout(
title = "Energy forecast for 2050, UK - Department of Energy & Climate Changes",
font = list(
size = 10
),
xaxis = list(showgrid = F, zeroline = F),
yaxis = list(showgrid = F, zeroline = F)
)
p
p <- plot_ly(
type = "sankey",
domain = c(
x =  c(0,1),
y =  c(0,1)
),
orientation = "h",
valueformat = ".0f",
valuesuffix = "TWh"
) %>%
layout(
title = "Energy forecast for 2050, UK - Department of Energy & Climate Change",
font = list(
size = 10
),
xaxis = list(showgrid = F, zeroline = F),
yaxis = list(showgrid = F, zeroline = F)
)
p
library(networkD3)
URL <- "https://cdn.rawgit.com/christophergandrud/networkD3/master/JSONdata/energy.json"
Energy <- jsonlite::fromJSON(URL)
head( Energy$links )
head( Energy$nodes )
Energy
sankeyNetwork(Links = Energy$links, Nodes = Energy$nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
units = "TWh", fontSize = 12, nodeWidth = 30)
write.csv(Energy$nodes,"nodes.csv")
write.csv(Energy$links,"links.csv")
read.csv("nodes.csv")
nodes <- read.csv("nodes.csv")
nodes <- read.csv("nodes.csv",stringsAsFactors = FALSE)
links <-  read.csv("links.csv",stringsAsFactors = FALSE)
head( Energy$links )
head( links )
head( nodes )
URL <- "https://cdn.rawgit.com/christophergandrud/networkD3/master/JSONdata/energy.json"
Energy <- jsonlite::fromJSON(URL)
sankeyNetwork(Links = Energy$links, Nodes = Energy$nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
units = "TWh", fontSize = 12, nodeWidth = 30)
nodes <- read.csv("nodes.csv",stringsAsFactors = FALSE)
links <-  read.csv("links.csv",stringsAsFactors = FALSE)
sankeyNetwork(Links = links, Nodes = nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
units = "TWh", fontSize = 12, nodeWidth = 30)
nodes <- read.csv("nodes.csv",stringsAsFactors = FALSE)
links <-  read.csv("links.csv",stringsAsFactors = FALSE)
sankeyNetwork(Links = links, Nodes = nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
units = "TWh", fontSize = 12, nodeWidth = 30)
nodes <- read.csv("nodes.csv",stringsAsFactors = FALSE)
links <-  read.csv("links.csv",stringsAsFactors = FALSE)
sankeyNetwork(Links = links, Nodes = nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
units = "TWh", fontSize = 12, nodeWidth = 30)
nodes <- read.csv("nodes.csv",stringsAsFactors = FALSE)
links <-  read.csv("links.csv",stringsAsFactors = FALSE)
sankeyNetwork(Links = links, Nodes = nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
units = "TWh", fontSize = 12, nodeWidth = 30)
library(networkD3)
nodes <- read.csv("nodes.csv",stringsAsFactors = FALSE)
links <-  read.csv("links.csv",stringsAsFactors = FALSE)
head( links )
head( nodes )
sankeyNetwork(Links = links, Nodes = nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
units = "TWh", fontSize = 12, nodeWidth = 30)
links <-  read.csv("links.csv",stringsAsFactors = FALSE,sep = ",")
head( links )
head( nodes )
links <-  read.csv("links.csv",stringsAsFactors = FALSE,sep = ",",header = T)
head( links )
head( nodes )
links <-  read.csv("links.csv",stringsAsFactors = FALSE)
head( links )
head( nodes )
links <-  read.csv("links.csv",stringsAsFactors = FALSE)
links <-  read.csv("links.csv",stringsAsFactors = FALSE)
nodes <- read.csv("nodes.csv",stringsAsFactors = FALSE)
head( nodes )
nodes <- read.csv("nodes.csv",stringsAsFactors = FALSE)
head( nodes )
sankeyNetwork(Links = links, Nodes = nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
units = "TWh", fontSize = 12, nodeWidth = 30)
URL <- "https://cdn.rawgit.com/christophergandrud/networkD3/master/JSONdata/energy.json"
Energy <- jsonlite::fromJSON(URL)
head( Energy$nodes )
head( nodes )
nodes$id <- NULL
nodes$Id <- NULL
sankeyNetwork(Links = links, Nodes = nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
units = "TWh", fontSize = 12, nodeWidth = 30)
links$X <- NULL
sankeyNetwork(Links = links, Nodes = nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
units = "TWh", fontSize = 12, nodeWidth = 30)
head( Energy$nodes )
head( Energy$links )
head( links )
head( Energy$nodes )
head( nodes )
dim(Energy)
dim(Energy$nodes)
nodes <- read.csv("nodes.csv",stringsAsFactors = FALSE)
head( nodes )
nodes <- read.csv("nodes.csv",stringsAsFactors = FALSE)
head( nodes )
nodes <- read.csv("nodes.csv",stringsAsFactors = FALSE)
head( nodes )
nodes$Id <- NULL
sankeyNetwork(Links = links, Nodes = nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
units = "TWh", fontSize = 12, nodeWidth = 30)
nodes <- read.csv("nodes.csv",stringsAsFactors = FALSE)
nodes$Id <- NULL
sankeyNetwork(Links = links, Nodes = nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
units = "TWh", fontSize = 12, nodeWidth = 30)
nodes <- read.csv("nodes.csv",stringsAsFactors = FALSE)
sankeyNetwork(Links = links, Nodes = nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
units = "TWh", fontSize = 12, nodeWidth = 30)
nodes <- read.csv("nodes.csv",stringsAsFactors = FALSE)
sankeyNetwork(Links = links, Nodes = nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
units = "TWh", fontSize = 12, nodeWidth = 30)
nodes <- read.csv("nodes.csv",stringsAsFactors = FALSE)
sankeyNetwork(Links = links, Nodes = nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
units = "TWh", fontSize = 12, nodeWidth = 30)
nodes <- read.csv("nodes.csv",stringsAsFactors = FALSE)
sankeyNetwork(Links = links, Nodes = nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
units = "TWh", fontSize = 12, nodeWidth = 30)
nodes <- read.csv("nodes.csv",stringsAsFactors = FALSE)
sankeyNetwork(Links = links, Nodes = nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
units = "TWh", fontSize = 12, nodeWidth = 30)
sankeyNetwork(Links = links, Nodes = nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
units = "freq", fontSize = 12, nodeWidth = 30)
sankeyNetwork(Links = links, Nodes = nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
units = "unidades", fontSize = 12, nodeWidth = 30)
sankeyNetwork(Links = links, Nodes = nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
units = "unidades", fontSize = 12, nodeWidth = 30)
install.packages("RNeo4j")
devtools::install_github("nicolewhite/RNeo4j")
library("RNeo4j")
install.packages("/Downloads/file.tar.gz", repos=NULL, type="source")
install.packages("e:RNeo4j-1.6.1.tar.gz", repos=NULL, type="source")
install.packages("e:\RNeo4j-1.6.1.tar.gz", repos=NULL, type="source")
install.packages("e:/RNeo4j-1.6.1.tar.gz", repos=NULL, type="source")
install.packages("e:/RNeo4j-1.6.1/RNeo4j-1.6.1", repos=NULL, type="source")
library("RNeo4j")
library(networkD3)
nodes <- read.csv("nodes.csv",stringsAsFactors = FALSE)
links <-  read.csv("links.csv",stringsAsFactors = FALSE)
nodes$Id <- NULL
links$X <- NULL
sankeyNetwork(Links = links, Nodes = nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
units = "unidades", fontSize = 12, nodeWidth = 30)
library(networkD3)
nodes <- read.csv("nodes.csv",stringsAsFactors = FALSE)
links <-  read.csv("links.csv",stringsAsFactors = FALSE)
nodes$Id <- NULL
links$X <- NULL
sankeyNetwork(Links = links, Nodes = nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
units = "unidades", fontSize = 12, nodeWidth = 30)
